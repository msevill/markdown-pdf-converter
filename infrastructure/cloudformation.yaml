AWSTemplateFormatVersion: '2010-09-09'
Description: Markdown-to-PDF Job API Infrastructure
Resources:
  # SQS Queue
  JobQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: markdown-pdf-job-queue

  # S3 Bucket
  PdfBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: markdown-pdf-outputs

  # PostgreSQL (RDS) - Placeholder
  # Add your RDS resource here

  # Lambda Function
  JobProcessorLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: markdown-pdf-job-processor
      Handler: dist/lambda/jobProcessor.handler
      Role: arn:aws:iam::123456789012:role/lambda-execution-role
      Runtime: nodejs18.x
      Environment:
        Variables:
          SQS_QUEUE_URL: !Ref JobQueue
          S3_BUCKET: !Ref PdfBucket
      Code:
        S3Bucket: your-deployment-bucket
        S3Key: lambda/jobProcessor.zip

  # API Gateway for Express API
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: MarkdownPdfApi
      Description: API Gateway for Markdown-to-PDF job endpoints

  ApiRootResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ApiGateway
          - RootResourceId
      PathPart: jobs
      RestApiId: !Ref ApiGateway

  ApiConvertResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref ApiRootResource
      PathPart: convert
      RestApiId: !Ref ApiGateway

  ApiJobsMethodPost:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref ApiRootResource
      RestApiId: !Ref ApiGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - { LambdaArn: { 'Fn::GetAtt': ['JobProcessorLambda', 'Arn'] } }

  ApiJobsIdMethodGet:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiRootResource
      RestApiId: !Ref ApiGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - { LambdaArn: { 'Fn::GetAtt': ['JobProcessorLambda', 'Arn'] } }

  ApiConvertMethodPost:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref ApiConvertResource
      RestApiId: !Ref ApiGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - { LambdaArn: { 'Fn::GetAtt': ['JobProcessorLambda', 'Arn'] } }

  # IAM roles, etc. - Add as needed
